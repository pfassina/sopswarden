name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v26
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        
    - name: Check flake
      run: nix flake check --no-build
      
    - name: Run unit tests
      run: nix-build tests/unit/test-lib.nix
      
    - name: Test NixOS module
      run: nix-build '<nixpkgs/nixos>' -A system --arg configuration ./tests/nixos/test-module.nix --no-out-link
      
    - name: Check basic example
      run: nix flake check examples/basic --no-build
      
    - name: Check advanced example  
      run: nix flake check examples/advanced --no-build
      
    - name: Build package
      run: nix build .#sopswarden-sync
      
    - name: Test development shell
      run: nix develop --command echo "Dev shell works"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v26
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Check formatting
      run: |
        nix develop --command nixpkgs-fmt --check .
        
    - name: Static analysis
      run: |
        nix develop --command statix check .
        nix develop --command deadnix --check .

  build-examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [basic, advanced]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v26
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build example
      run: |
        cd examples/${{ matrix.example }}
        nix flake check --no-build